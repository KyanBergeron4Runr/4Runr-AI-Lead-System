#!/usr/bin/env python3
"""
Simple SMTP test for Microsoft 365 accounts.
"""

import sys
import smtplib
from pathlib import Path
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def send_test_message_smtp():
    """Send test message using SMTP with Microsoft 365."""
    print("üìß Sending Test Message via SMTP (Microsoft 365)")
    print("=" * 60)
    
    # Microsoft 365 SMTP settings
    smtp_host = "smtp.office365.com"
    smtp_port = 587
    username = "KyanBergeron@4runrtech.com"
    
    # You need to provide your app password here
    print("üîë Please enter your Microsoft 365 App Password:")
    print("   (Go to https://account.microsoft.com/security ‚Üí App passwords)")
    password = input("App Password: ").strip()
    
    if not password:
        print("‚ùå No password provided!")
        return False
    
    try:
        # The personalized message we generated
        message_content = """Hi Kyan,

I've been following 4Runr's work in AI-powered business automation and I'm impressed by your approach to helping companies streamline their operations through intelligent solutions.

As a founder in the AI automation space, you're likely focused on scaling your lead generation systems and optimizing client acquisition processes. Your expertise in custom automation systems and strategic AI consulting puts you at the forefront of this rapidly evolving industry.

I'd love to explore how we might collaborate or share insights about emerging trends in AI-driven business automation. Would you be open to a brief conversation about your current priorities and the challenges you're seeing in the market?

Best regards,
4Runr Team

---
This message was generated by the 4Runr Autonomous Outreach System
Website analyzed: https://4runrtech.com/
Generated on: 2025-07-29
Method: SMTP (Microsoft 365)"""
        
        # Create email message
        msg = MIMEMultipart()
        msg['From'] = username
        msg['To'] = 'kyanberg@outlook.com'
        msg['Subject'] = 'ü§ñ Test: AI-Generated Outreach Message - 4Runr Partnership'
        
        # Add message body
        msg.attach(MIMEText(message_content, 'plain'))
        
        print(f"\nüìù Message Preview:")
        print(f"From: {msg['From']}")
        print(f"To: {msg['To']}")
        print(f"Subject: {msg['Subject']}")
        print("-" * 60)
        print(message_content[:200] + "..." if len(message_content) > 200 else message_content)
        print("-" * 60)
        
        # Send email
        print(f"\nüöÄ Sending email...")
        
        with smtplib.SMTP(smtp_host, smtp_port) as server:
            print(f"‚úÖ Connected to {smtp_host}:{smtp_port}")
            
            server.starttls()
            print("‚úÖ TLS encryption enabled")
            
            server.login(username, password)
            print("‚úÖ Authentication successful")
            
            server.send_message(msg)
            print("‚úÖ Message sent successfully!")
        
        print(f"\nüéâ SUCCESS!")
        print(f"The AI-generated message has been sent to kyanberg@outlook.com")
        print(f"Check your inbox for the personalized outreach message!")
        
        # Save the password to .env file for future use
        print(f"\nüíæ Would you like to save this password to the .env file? (y/n): ", end="")
        save_password = input().strip().lower()
        
        if save_password == 'y':
            try:
                # Read current .env file
                env_path = Path("4runr-outreach-system/.env")
                with open(env_path, 'r') as f:
                    content = f.read()
                
                # Update SMTP settings
                content = content.replace('SMTP_HOST=smtp.gmail.com', f'SMTP_HOST={smtp_host}')
                content = content.replace('SMTP_USERNAME=KyanBergeron@4runrtech.com', f'SMTP_USERNAME={username}')
                content = content.replace('SMTP_PASSWORD=your_app_password_here', f'SMTP_PASSWORD={password}')
                
                # Write back to file
                with open(env_path, 'w') as f:
                    f.write(content)
                
                print("‚úÖ Password saved to .env file!")
                print("   You can now use the regular engager agent to send emails.")
                
            except Exception as e:
                print(f"‚ùå Failed to save password: {str(e)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Failed to send message: {str(e)}")
        
        # Common error troubleshooting
        if "authentication failed" in str(e).lower():
            print("\nüîß Troubleshooting:")
            print("  ‚Ä¢ Make sure you're using an App Password, not your regular password")
            print("  ‚Ä¢ Go to https://account.microsoft.com/security")
            print("  ‚Ä¢ Click 'App passwords' and generate a new one")
            print("  ‚Ä¢ Use the 16-character app password")
        elif "connection" in str(e).lower():
            print("\nüîß Troubleshooting:")
            print("  ‚Ä¢ Check your internet connection")
            print("  ‚Ä¢ Some networks block SMTP ports")
        
        return False

def main():
    """Main function."""
    success = send_test_message_smtp()
    return success

if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)